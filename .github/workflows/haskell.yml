name: Haskell CI

on:
  push:
    branches: [ "main" ]
  pull_request:
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true


permissions:
  contents: read

jobs:
  # Build and test
  build:
    name: "haskell-ci (${{ matrix.ghc }}, ${{ matrix.os }})"
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        ghc: ["9.6.7", "9.8.4", "9.10.2", "9.12.2"]
        cabal: ["3.14"]
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Haskell
      id: setup-haskell
      uses: haskell-actions/setup@v2
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}
        cabal-update: true

    - name: Configure the build
      run: |
        cabal configure --enable-tests --ghc-options="-Werror" --ghc-options="-fno-ignore-asserts"
        cat cabal.project.local

    - name: Record cabal dependencies
      id: record-deps
      run: |
        cabal build all --dry-run

    - name: "Restore cache"
      uses: actions/cache/restore@v4
      id: restore-cabal-cache
      env:
        cache-name: cache-cabal-build
      with:
        path: ${{ steps.setup-haskell.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-${{ hashFiles('**/cabal.project') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.ghc }}-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-${{ hashFiles('**/cabal.project') }}
          ${{ runner.os }}-${{ matrix.ghc }}-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-
          ${{ runner.os }}-${{ matrix.ghc }}-${{ env.cache-name }}-

    - name: Install cabal dependencies
      id: build-dependencies
      run: cabal build --only-dependencies --enable-tests all

    - name: "Save cache"
      uses: actions/cache/save@v4
      id: save-cabal-cache
      # Note: cache-hit will be set to true only when cache hit occurs for the
      # exact key match. For a partial key match via restore-keys or a cache
      # miss, it will be set to false.
      if: steps.build-dependencies.outcome == 'success' && steps.restore-cabal-cache.outputs.cache-hit != 'true'
      with:
        path: ${{ steps.setup-haskell.outputs.cabal-store }}
        key:  ${{ steps.restore-cabal-cache.outputs.cache-primary-key }}

    - name: Build
      run: cabal build all

    - name: Run tests
      run: cabal test -j1 all

  # Check formatting for Haskell files
  fourmolu:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        ghc: ["9.10.2"]
        cabal: ["3.14"]
        os: [ubuntu-latest]

    # Fix the index-state so we can get proper caching effects. Change this to a
    # more recent time if you want to use a newer version of stylish-haskell, or
    # if you want stylish-haskell to use updated dependencies.
    #
    # We use this environment variable in the primary key of our caches, and as
    # an argument to cabal install. This ensures that we never rebuild
    # dependencies because of newly uploaded packages unless we want to.
    env:
      hackage-index-state: "2025-01-25T21:25:58Z"

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install system dependencies (apt-get)
      run: |
        sudo apt-get update
        sudo apt-get -y install fd-find

    - name: Setup Haskell
      id: setup-haskell
      uses: haskell-actions/setup@v2
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}
        cabal-update: false

    - name: Cabal update
      run: cabal update

    - name: Setup cabal bin path
      run: echo "$HOME/.cabal/bin" >> $GITHUB_PATH

    - name: Cache cabal store
      uses: actions/cache@v4
      env:
        cache-name: cache-cabal-fourmolu
      with:
        path: ${{ steps.setup-haskell.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ env.cache-name }}-${{ env.hackage-index-state }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.ghc }}-${{ env.cache-name }}-

    - name: Install fourmolu
      run: cabal install --ignore-project --index-state="${{ env.hackage-index-state }}" fourmolu-0.18.0.0

    - name: Record fourmolu version
      run: |
        which fourmolu
        fourmolu --version

    - name: Run stylish-haskell
      run: |
        ./scripts/format-fourmolu.sh
        git diff --exit-code

  # Check formatting for cabal files
  cabal-gild:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        ghc: ["9.10"]
        cabal: ["3.14"]
        os: [ubuntu-latest]

    # See the comment on the hackage-index-state environment variable for the
    # fourmolu job.
    env:
      hackage-index-state: "2025-05-22T02:57:10Z"

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install system dependencies (apt-get)
      run: |
        sudo apt-get update
        sudo apt-get -y install fd-find

    - name: Setup Haskell
      id: setup-haskell
      uses: haskell-actions/setup@v2
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}
        cabal-update: false

    - name: Cabal update
      run: cabal update

    - name: Setup cabal bin path
      run: echo "$HOME/.cabal/bin" >> $GITHUB_PATH

    - name: Cache cabal store
      uses: actions/cache@v4
      env:
        cache-name: cache-cabal-cabal-gild
      with:
        path: ${{ steps.setup-haskell.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ env.cache-name }}-${{ env.hackage-index-state }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.ghc }}-${{ env.cache-name }}-

    - name: Install cabal-gild
      run: cabal install --ignore-project --index-state="${{ env.hackage-index-state }}" cabal-gild-1.6.0.2

    - name: Record cabal-gild version
      run: |
        which cabal-gild
        cabal-gild --version

    - name: Run cabal-gild
      run: |
        ./scripts/format-cabal.sh
        git diff --exit-code

  # Check cabal files
  cabal-check:
    name: "cabal check"
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        ghc: ["9.10.2"]
        cabal: ["3.14"]
        os: [ubuntu-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Haskell
      id: setup-haskell
      uses: haskell-actions/setup@v2
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}
        cabal-update: false

    - name: Cabal update
      run: cabal update

    - name: Run cabal check
      run: |
        ./scripts/check-cabal.sh
